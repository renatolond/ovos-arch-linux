_gh_org=OpenVoiceOS
_gh_proj=ovos-messagebus
pkgname=python-ovos-messagebus
_name=ovos-messagebus
_unit_name="ovos-messagebus"
_commit='6c156753a29fd807ec2323b7f8995a60a29527ce'
pkgver='0.0.3'
pkgrel=01
pkgdesc='messagebus service, the nervous system of OpenVoiceOS'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-messagebus/'
license=('Apache License 2.0')
depends=('ovos-service-base' 'python' 'python-sdnotify')
conflicts=()
makedepends=(python-build python-installer python-wheel python-setuptools)
provides=("$_unit_name-server")
conflicts=("ovos-bus-server")
# install=python-ovos-messagebus.install

#### Automatically generated dependencies. Do not edit.
depends+=(
'python-ovos-config>=0.0.8' # ovos-config>=0.0.8,~=0.0
'python-ovos-utils>=0.0.32' # ovos-utils>=0.0.32,~=0.0
'python-tornado>=6.0.3' # tornado>=6.0.3,~=6.0
)
conflicts+=(

)
optdepends+=(

)

#### End of automatically generated dependencies.
source=("https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz" \
    "$_unit_name.service" \
    "ovos-systemd_messagebus.py" \
    "python-$_unit_name.install")
sha256sums=('52dfdfb3ec31dce89991afb26ec6dd1fa57a1a3f2061d69cf778baf388115468'
            '423ede875cf62963fbd8ed4103624c6347b00ce185027ebde54e31a6d1fa59bf'
            'f1732d6858fd0c74e91304e92db30b0ee4a9c4a3e32d98d97bf3564a8197c685'
            'd2208a11d02faee1acf63a0f5b871a41b7005eb26f86a56552c6425b918409fa')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +

    mkdir -p "$pkgdir/usr/lib/systemd/system"
    install -Dm644 "$srcdir/$_unit_name.service" "$pkgdir/usr/lib/systemd/system"

    mkdir -p "$pkgdir/etc/systemd/system/$_unit_name.d/"
    install -Dm644 "$srcdir/ovos-systemd_messagebus.py" "$pkgdir/etc/systemd/system/$_unit_name.d/"
}

