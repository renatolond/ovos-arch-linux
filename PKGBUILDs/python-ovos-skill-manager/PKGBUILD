_gh_org=OpenVoiceOS
_gh_proj=ovos_skill_manager
pkgname=python-ovos-skill-manager
_name=ovos_skill_manager
_base_ver='1a749aed214b4274097b8fcea5ca2984f76b000d'
pkgver=0.0.13a2
pkgrel=1
pkgdesc='Skill installer for OVOS. Install skills from any appstore!

The mycroft-skills-manager alternative that is not vendor locked,
this means you must use it responsibly!

Do not install random skills, different appstores have
different policies!'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos_skill_manager/'
license=('')
depends=(python \
 'python-bs4' \
 'python-click' \
 'python-click-default-group>=1.2.2' #>=1.2.2) \
 'python-combo-lock' \
 'python-json_database' \
 'python-ovos_config>=0.0.3' #>=0.0.3,~=0.0) \
 'python-ovos_skill_installer>=0.0.5' #>=0.0.5) \
 'python-ovos_utils' \
 'python-packaging' \
 'python-pako>=0.2.3' #>=0.2.3) \
 'python-PyYAML' \
 'python-requests' \
 'python-requests-cache' \
)
makedepends=(python-build python-installer python-wheel)

source=("https://github.com/$_gh_org/$_gh_proj/archive/$_base_ver.tar.gz")
sha256sums=(
   #python-ovos-skill-manager-1a749aed214b4274097b8fcea5ca2984f76b000d.tar.gz \
   9d90f42a8b70aeeda69ec42b3086a76a3011a8064c0acc6653624f83b4884dac)

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_base_ver}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_base_ver"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_base_ver"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_base_ver"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_base_ver"

    echo "Installing $pkgname to $pkgdir"
    python -m installer --destdir="$pkgdir" dist/*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}


################################################################################
# #
# # python-ovos-skill-manager
# #
# ################################################################################
# 
# PYTHON_OVOS_SKILL_MANAGER_VERSION = 1a749aed214b4274097b8fcea5ca2984f76b000d
# PYTHON_OVOS_SKILL_MANAGER_SITE = $(call github,OpenVoiceOS,ovos_skill_manager,$(PYTHON_OVOS_SKILL_MANAGER_VERSION))
# PYTHON_OVOS_SKILL_MANAGER_SETUP_TYPE = setuptools
# PYTHON_OVOS_SKILL_MANAGER_LICENSE_FILES = LICENSE
# PYTHON_OVOS_SKILL_MANAGER_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 



