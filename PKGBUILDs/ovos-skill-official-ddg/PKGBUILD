_gh_org=OpenVoiceOS
_gh_proj=skill-ovos-ddg
pkgname=ovos-skill-official-ddg
_name=skill-ovos-ddg
_commit='76dd835225ba69c4f6f91edc95c47d142829ba92'
pkgver=76dd835225ba69c4f6f91edc95c47d142829ba92
pkgrel=1
pkgdesc='Use DuckDuckGo to answer questions'
arch=('any')
url='https://github.com/OpenVoiceOS/skill-ovos-ddg/'
license=('Apache License 2.0')
depends=(python
    "python-ovos-utils>=0.0.28"
    "python-ovos-workshop>=0.0.12a27"
)
conflicts=()
makedepends=(python-build python-installer python-wheel)
provides=("$pkgname")
conflicts+=("$pkgname")

source=("https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz")
sha256sums=(
   #skill-ovos-ddg-76dd835225ba69c4f6f91edc95c47d142829ba92.tar.gz \
   63d37ec5bfc1ee38eb12f77861b00e080573bdc68ffcfc72d6d40ff79facb499)

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}


################################################################################
# #
# # skill-ovos-ddg
# #
# ################################################################################
# 
# SKILL_OVOS_DDG_VERSION = 76dd835225ba69c4f6f91edc95c47d142829ba92
# SKILL_OVOS_DDG_SITE = $(call github,OpenVoiceOS,skill-ovos-ddg,$(SKILL_OVOS_DDG_VERSION))
# SKILL_OVOS_DDG_SETUP_TYPE = setuptools
# SKILL_OVOS_DDG_LICENSE_FILES = LICENSE
# 
# $(eval $(python-package))
# 



