_gh_org=OpenVoiceOS
_gh_proj=ovos-number-parser
pkgname=python-ovos-number-parser
_name=ovos-number-parser
_base_ver=0.5.1
pkgver=0.5.1
pkgrel=1
pkgdesc='OVOS Number Parser is a tool for extracting, pronouncing, and detecting numbers from text across multiple languages. It supports functionalities like converting numbers to their spoken forms, extracting numbers from text, identifying fractional and ordinal numbers, and more.'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-number-parser'
license=('UNKNOWN')
depends=(python)
conflicts=()
makedepends=(python-build python-installer python-wheel python-setuptools)
source=("https://github.com/$_gh_org/$_gh_proj/archive/refs/tags/$_base_ver.tar.gz")
sha256sums=('c18f1292c7f81a6118825c18ea0bdb0bc284c37882e772178664fb7346bf326a')

depends+=(
'python-quebra-frases>=0.3.7' # quebra_frases>=0.3.7
'python-unicode-rbnf'
)

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_base_ver}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_base_ver"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_base_ver"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_base_ver"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_base_ver"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi

    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}
