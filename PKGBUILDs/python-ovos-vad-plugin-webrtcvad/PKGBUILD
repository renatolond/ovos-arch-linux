_gh_org=OpenVoiceOS
_gh_proj=ovos-vad-plugin-webrtcvad
pkgname=python-ovos-vad-plugin-webrtcvad
_name=ovos-vad-plugin-webrtcvad
_base_ver='e08ad05426f3742f74f17f182ced7255c3a580f9'
pkgver=0.0.2
pkgrel=1
pkgdesc='ovos plugin for voice activity detection using webrtcvad'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-vad-plugin-webrtcvad/'
license=('')
depends=(python \
 'python-ovos-plugin-manager>=0.0.11' \
 'python-webrtcvad' \
)
conflicts=()
makedepends=(python-build python-installer python-wheel)

source=("https://github.com/$_gh_org/$_gh_proj/archive/$_base_ver.tar.gz")
sha256sums=(
   #python-ovos-vad-plugin-webrtcvad-e08ad05426f3742f74f17f182ced7255c3a580f9.tar.gz \
   f0fecbf703e79e38d6ff7c0478da392d679dc771c9a5f3086508cb12d8bdd729)

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_base_ver}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_base_ver"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_base_ver"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_base_ver"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_base_ver"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}


################################################################################
# #
# # python-ovos-vad-plugin-webrtcvad
# #
# ################################################################################
# 
# PYTHON_OVOS_VAD_PLUGIN_WEBRTCVAD_VERSION = e08ad05426f3742f74f17f182ced7255c3a580f9
# PYTHON_OVOS_VAD_PLUGIN_WEBRTCVAD_SITE = $(call github,OpenVoiceOS,ovos-vad-plugin-webrtcvad,$(PYTHON_OVOS_VAD_PLUGIN_WEBRTCVAD_VERSION))
# PYTHON_OVOS_VAD_PLUGIN_WEBRTCVAD_SETUP_TYPE = setuptools
# PYTHON_OVOS_VAD_PLUGIN_WEBRTCVAD_LICENSE_FILES = LICENSE
# PYTHON_OVOS_VAD_PLUGIN_WEBRTCVAD_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 



