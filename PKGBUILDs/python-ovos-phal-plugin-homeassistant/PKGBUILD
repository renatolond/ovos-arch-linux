_gh_org=OpenVoiceOS
_gh_proj=ovos-PHAL-plugin-homeassistant
pkgname=python-ovos-phal-plugin-homeassistant
_name=ovos-PHAL-plugin-homeassistant
_base_ver='df606469ed56965a3274ff5d7b62ec20c4b22f75'
pkgver='0.0.3'
pkgrel=00
pkgdesc='HomeAssistant PHAL Plugin for OpenVoiceOS'
arch=('any')
url='https://github.com/OpenVoiceOS/ovos-PHAL-plugin-homeassistant/'
license=('Apache License 2.0')
depends=(python)
conflicts=()
makedepends=(python-build python-installer python-wheel python-setuptools)

#### Automatically generated dependencies. Do not edit.
depends+=(
'python-mycroft-messagebus-client>=0.10' # mycroft-messagebus-client~=0.10
'python-nested-lookup>=0.2' # nested-lookup~=0.2
'python-ovos-config>=0.0.5' # ovos-config~=0.0.5
'python-ovos-phal-plugin-oauth>=0.0.1' # ovos-PHAL-plugin-oauth~=0.0.1
'python-ovos-plugin-manager>=0.0.1' # ovos-plugin-manager~=0.0.1
'python-ovos-utils>=0.0.27' # ovos-utils~=0.0.27
'python-pytube>=12.1' # pytube~=12.1
'python-websockets>=10.4' # websockets~=10.4
'python-youtube-search>=2.1' # youtube-search~=2.1
)
#### End of automatically generated dependencies.
source=("https://github.com/$_gh_org/$_gh_proj/archive/$_base_ver.tar.gz")
sha256sums=('4a89246be54232243a0450906186aea67467c8d378ec5eeb5bc9eefbf498aaad')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_base_ver}"
        fi
    done
}

pkgver(){
    cd "$srcdir/$_name-$_base_ver"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_base_ver"
    python -m build --wheel --no-isolation
}

check() {
    cd "$_name-$_base_ver"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_base_ver"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}
