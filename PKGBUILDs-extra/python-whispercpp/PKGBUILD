_gh_org=abdeladim-s
_gh_proj=pywhispercpp
pkgname=python-whispercpp
_name=pywhispercpp
_commit='b19b9d14cd72c3b7d3f8b3c9655b087ff0392b12'
pkgver=1.1.2
pkgrel=00
pkgdesc='Python bindings for whispercpp'
arch=('x86_64' 'aarch64' 'armv7h')
url='https://github.com/abdeladim-s/pywhispercpp/'
license=('MIT')
depends=(python "whisper.cpp"
'python-numpy'
'python-pydub>=0.25.1'
'python-requests>=2.28.2'
'python-tqdm>=4.65.0'
'python-platformdirs>=3.1.1'
)
optdepends=(
    'python-sounddevice>=0.4.6: for extra samples'
    'python-webrtcvad>=2.0.10: for extra samples'
)
conflicts=()
makedepends=(python-build python-installer python-wheel python-setuptools cmake)

source=(
    "https://github.com/$_gh_org/$_gh_proj/archive/$_commit.tar.gz"
    "CMakeLists.txt"
)
sha256sums=('a51e73bb260cbb214957ebbf8f0b0e77be24cb6a4729629230ad649b1ea4f693'
            'ec18a4a46463b8af34fd5df253ecca2521a079f1eb20c07c27e1b2a2d5305fea')

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${_name}-${_commit}"
        fi
    done

    # Replace CmakeLists.txt with a custom one which treats whisper.cpp as an external library
    cp "$srcdir/CMakeLists.txt" "$srcdir/$_name-$_commit/CMakeLists.txt"

    # Replace `#include "../whisper.cpp/whisper.h"` with `#include <whisper.h>` in src/main.cpp
    sed -i 's/#include "..\/whisper.cpp\/whisper.h"/#include <whisper.h>/g' "$srcdir/$_name-$_commit/src/main.cpp"
}

pkgver(){
    cd "$srcdir/$_name-$_commit"
    echo "$(python setup.py --version)"
}

build() {
    cd "$_name-$_commit"
    python -m build --wheel --no-isolation --skip-dependency-check
}

check() {
    cd "$_name-$_commit"

    local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
    local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

    # nosetests
    # pytest
}

package() {
    cd "$_name-$_commit"

    echo "Installing $pkgname to $pkgdir"
    # some packages produce multiple wheels, install the one specific to the version of the package
    python -m installer --destdir="$pkgdir" dist/*$pkgver*.whl

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}


################################################################################
# #
# # python-ovos-stt-plugin-whispercpp
# #
# ################################################################################
# 
# PYTHON_OVOS_STT_PLUGIN_WHISPERCPP_VERSION = 2eac10f51d6cc80c5d75894babbdc4f902d6273f
# PYTHON_OVOS_STT_PLUGIN_WHISPERCPP_SITE = $(call github,OpenVoiceOS,ovos-stt-plugin-whispercpp,$(PYTHON_OVOS_STT_PLUGIN_WHISPERCPP_VERSION))
# PYTHON_OVOS_STT_PLUGIN_WHISPERCPP_SETUP_TYPE = setuptools
# PYTHON_OVOS_STT_PLUGIN_WHISPERCPP_ENV = MYCROFT_LOOSE_REQUIREMENTS=true
# 
# $(eval $(python-package))
# 



