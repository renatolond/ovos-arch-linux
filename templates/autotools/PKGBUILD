_gh_org={{gh_org}}
_gh_proj={{gh_proj}}
pkgname={{pkgname}}
pkgver={{pkgver}}
pkgrel=0
pkgdesc={{pkgdesc}}
arch=('any')
url={{url}}
license=({{license}})
depends=({{depends}})
makedepends=({{makedepends}})

source=({{sources}})
sha256sums=({{sha256sums}})

prepare() {
    cd "$srcdir"
    for patch in "../"*.patch; do
        if [ -f "$patch" ]; then
          echo "Applying patch $patch"
          patch --forward --strip=1 --input="${PWD}/${patch}" --directory="${srcdir}/${pkgname}-${pkgver}"
        fi
    done
}

build() {
    cd "$srcdir"
{{build_leader}}
    autoreconf -vfi
    ./configure --prefix=/usr "$CONF_OPTS" 
    make
}

check() {
    cd "$srcdir"
}

package() {
    cd "$srcdir" 
    echo "Installing $pkgname to $pkgdir"
    make DESTDIR="$pkgdir" install

    # Optional: Copy documentation files
    if [ -d "$srcdir/$pkgname/docs" ]; then
        mkdir -p "$pkgdir/usr/share/doc/$pkgname"  # Create doc directory
        cp -r "$srcdir/$pkgname/docs" "$pkgdir/usr/share/doc/$pkgname" || true
        chmod 644 "$pkgdir/usr/share/doc/$pkgname"/*.txt  || true # Set read permissions for documentation files
    fi
    
    # Optional: Remove unused files or directories
    # For example, removing unneeded binaries, license files, etc.
    # rm "$pkgdir/usr/bin/unneeded_binary"  # Remove unneeded binary
    # rm "$pkgdir/usr/share/doc/$pkgname/unneeded_license.txt"  # Remove unneeded license file

    # Search for license files in the original source directory
    mkdir -p $pkgdir/usr/share/licenses/$pkgname
    find "$srcdir" -maxdepth 2 -type f -name 'LICENSE*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
    find "$srcdir" -maxdepth 1 -type f -name 'COPYING*' -exec cp -t "$pkgdir/usr/share/licenses/$pkgname" {} +
}

{{footer}}

