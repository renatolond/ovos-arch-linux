name: Conditional Makefile rebuild

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for changes in PKGBUILD folders
        id: check_PKGBUILDs
        run: |
          git diff --name-only 'HEAD~1..HEAD' -- 'PKGBUILDs/*/PKGBUILD' 'PKGBUILDs-extra/*/PKGBUILD' > /tmp/changed_PKGBUILDs.txt
          if grep -qE 'PKGBUILDs/|PKGBUILDs-extra/' /tmp/changed_PKGBUILDs.txt; then
            echo "PKGBUILDs changed. Updating .SCRINFO files..."
            # The task will also output the list of PKGBUILDs paths as `set-output` variable encoded in json array
            pkgbuilds=()
            while IFS= read -r file; do
              pkgbuilds+=("$file")
              pkgbuild_dir="$(dirname "$file")"
              pushd "$pkgbuild_dir"
              makepkg --printsrcinfo > .SRCINFO 
              popd
            done < /tmp/changed_PKGBUILDs.txt
            echo "::set-output name=has_changes::true"
            echo "::set-output name=pkgbuilds::$(echo "${pkgbuilds[@]}" | jq -R . | jq -s .)"
          fi

      - name: PKGBUILD matrix task
        id: pkgbuild_matrix
        strategy:
          matrix:
            pkg: ${{ fromJson(steps.check_PKGBUILDs.outputs.pkgbuilds) }}
        steps:
        - name: Build package
          uses: hapakaien/archlinux-package-action@v2
          with:
            path: ${{ matrix.pkg }}
            flags: ''
            namcap: false
            srcinfo: true

      - name: Check for changes in aur.lock
        id: check_aur_lock
        run: |
          if git diff --name-only 'HEAD~1..HEAD' -- aur.lock | grep -q 'aur.lock'; then
            echo "aur.lock changed."
            echo "::set-output name=has_changes::true"
          fi

      - name: Rebuild Makefile
        id: rebuild_makefile
        if: steps.check_PKGBUILDs.outputs.has_changes == 'true' || steps.check_aur_lock.outputs.has_changes == 'true'
        run: |
          echo "Changes detected. Rebuilding Makefile..."
          run: ./generate-makefile.ps1
          shell: pwsh

      - name: Commit changes
        if: steps.check_PKGBUILDs.outputs.has_changes == 'true' || steps.check_aur_lock.outputs.has_changes == 'true'
        run: |
          git config --local user.email "ovos-arch-buildbot@noemail.local"
          git config --local user.name "OVOS Arch BuildBot"
          git add .
          git diff-index --quiet HEAD || git commit -m "Update Makefile"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
