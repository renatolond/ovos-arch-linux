name: Conditional Makefile rebuild

on:
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for changes in PKGBUILD folders
        id: check_assets
        run: |
          git diff --name-only 'HEAD~1..HEAD' -- 'PKGBUILDs/*/PKGBUILD' 'PKGBUILDs-extra/*/PKGBUILD' > /tmp/changed_PKGBUILDs.txt
          if grep -qE 'PKGBUILDs/|PKGBUILDs-extra/' /tmp/changed_PKGBUILDs.txt; then
            echo "PKGBUILDs changed. .SCRINFO will be updated in the matrix task..."
            # The task will also output the list of PKGBUILDs paths as `set-output` variable encoded in json array
            pkgbuilds=()
            while IFS= read -r file; do
              pkgbuilds+=("$file")
              echo "Changed: $file"
            done < /tmp/changed_PKGBUILDs.txt
            echo "has_PKGBUILD_changes=true"
            echo "has_PKGBUILD_changes=true" >> $GITHUB_OUTPUT
            json=$(echo "${pkgbuilds[@]}" | jq -R . | jq --indent 0 -s .) # encode array as json
            echo "pkgbuilds=$json"
            echo "pkgbuilds=$json" >> $GITHUB_OUTPUT
          fi
          if git diff --name-only 'HEAD~1..HEAD' -- aur.lock | grep -q 'aur.lock'; then
            echo "aur.lock changed."
            echo "has_AUR_lock_changes=true" >> $GITHUB_OUTPUT
          fi
    outputs:
      has_PKGBUILD_changes: ${{ steps.check_assets.outputs.has_PKGBUILD_changes }}
      has_AUR_lock_changes: ${{ steps.check_assets.outputs.has_AUR_lock_changes }}
      pkgbuilds: ${{ steps.check_assets.outputs.pkgbuilds }}

  update-srcinfos:
    needs: check
    if: needs.check.outputs.has_PKGBUILD_changes == 'true'
    runs-on: ubuntu-latest
    name: Bulk SRCINFO update task
    # strategy:
    #   matrix:
    #     pkg: ${{ fromJson(needs.check.outputs.pkgbuilds) }}
    steps:
    - uses: ./.github/actions/makepkg
      with:
        operation: makefile
        working-dir: ${{ matrix.pkg }}

  makefile:
    needs: 
    - update-srcinfos
    - check
    if: needs.check.outputs.has_PKGBUILD_changes == 'true' || needs.check.outputs.has_AUR_lock_changes == 'true'
    runs-on: ubuntu-latest
    name: Makefile and commit
    steps:
      - name: Rebuild Makefile
        id: rebuild_makefile
        run: |
          echo "Changes detected. Rebuilding Makefile..."
          run: ./generate-makefile.ps1
          shell: pwsh

      - name: Commit changes
        run: |
          git config --local user.email "ovos-arch-buildbot@noemail.local"
          git config --local user.name "OVOS Arch BuildBot"
          git add .
          git diff-index --quiet HEAD || git commit -m "Update Makefile"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
