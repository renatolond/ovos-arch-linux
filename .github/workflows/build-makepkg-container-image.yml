name: Build `archlinux-{arm64v8,armv7hf}:base-devel` and `gha-makepkg:latest` multi-arch images
on: 
  workflow_dispatch:
    inputs:
      rebuild_basedevel:
        description: 'Rebuild base-devel'
        type: boolean
        required: false
  push:
    paths:
    - ./.github/actions/makepkg/**
    branches:
    - main

jobs:
  build-basedevel-arm-images:
    runs-on: ubuntu-latest
    name: Build ARM archlinux-{aarch64, armv7hf}:base-devel images
    # if: github.event.inputs.arch == '' || github.event.inputs.arch == null || github.event.inputs.arch == matrix.platform
    strategy:
      matrix:
        platform:
        - aarch64
        # - armv7hf
    steps:
    - name: Check if `archlinux-${{ matrix.platform }}:base-devel` image is available in the `ghcr` registry
      if: github.event.inputs.rebuild_basedevel != true
      id: check_registry
      run: |
        GHCR_TOKEN=$(echo $GITHUB_TOKEN | base64)
        curl --fail -H "Authorization: Bearer $GHCR_TOKEN" https://ghcr.io/v2/valorekhov/archlinux-${{ matrix.platform }}/tags/list | grep -q '"base-devel"' || exit 0

        # docker manifest inspect "ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:base-devel" || exit 0
        echo "registry_has_base_devel_image=true"
        echo "registry_has_base_devel_image=true" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout Repository
      if: steps.check_registry.outputs.registry_has_base_devel_image != 'true'
      uses: actions/checkout@v3

    - name: Set up QEMU
      if: steps.check_registry.outputs.registry_has_base_devel_image != 'true'
      uses: docker/setup-qemu-action@v2

    - name: Login to GitHub docker registry
      if: steps.check_registry.outputs.registry_has_base_devel_image != 'true'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      if: steps.check_registry.outputs.registry_has_base_devel_image != 'true'
      uses: docker/setup-buildx-action@v2

    - name: Build base-devel image from ArchLinux ARM tarball
      id: prepare_image
      if: steps.check_registry.outputs.registry_has_base_devel_image != 'true'
      run: |
        # Convert docker ARCH to archlinux-arm ARCH
        case "${{ matrix.platform }}" in
            "arm64v8")
                arch="aarch64"
                ;;
            "aarch64")
                arch="aarch64"
                ;;
            "armv7hf")
                arch="armv7"
                ;;
            *)
                echo "Invalid architecture"
                exit 1
                ;;
        esac

        wget "http://os.archlinuxarm.org/os/ArchLinuxARM-$arch-latest.tar.gz"
        gzip -d "ArchLinuxARM-$arch-latest.tar.gz"
        mv "ArchLinuxARM-$arch-latest.tar" "./tools/container-build/base-devel/ArchLinuxARM-latest.tar"
        # docker import "ArchLinuxARM-$arch-latest.tar" archlinux-${{ matrix.platform }}:latest

        # echo -e "FROM scratch\nADD ArchLinuxARM-$arch-latest.tar /\nCMD [\"bash\"]" > /tmp/archlinux-${{ matrix.platform }}-Dockerfile 
        
        # docker buildx build \
        #   --tag "archlinux-${{ matrix.platform }}:latest" \
        #   --tag "ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:latest" \
        #   --platform="${{ matrix.platform }}" \
        #   --push \
        #   --file /tmp/archlinux-${{ matrix.platform }}-Dockerfile .        
        # docker image inspect --format='{{.Architecture}}' "archlinux-${{ matrix.platform }}:latest"
        
        docker buildx build \
          --build-arg ARCH=${{ matrix.platform }} \
          --platform "${{ matrix.platform }}" \
          --tag ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:base-devel \
          --pull=false \
          --push \
          --file ./tools/container-build/base-devel/Containerfile.from-rootfs-tarball \
          ./tools/container-build/base-devel
      
    # - name: Build base-devel ArchLinux ARM image
    #   if: steps.check_registry.outputs.registry_has_base_devel_image != 'true'
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: ./tools/container-build/base-devel
    #     file: ./tools/container-build/base-devel/Containerfile
    #     build-args: |
    #       ARCH=${{ matrix.platform }}
    #     platforms: ${{ steps.prepare_image.outputs.platform }}
    #     tags: |
    #       archlinux-${{ matrix.platform }}:base-devel
    #       ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:base-devel
    #     pull: false
    #     # cache-from: archlinux-${{ matrix.platform }}:latest
    #     # cache-to: type=gha,mode=max
    #     push: true

  build-makepkg-image:
    needs: build-basedevel-arm-images
    runs-on: ubuntu-latest
    name: Build gha-makepkg images
    # if: github.event.inputs.arch == '' || github.event.inputs.arch == null || github.event.inputs.arch == matrix.platform
    strategy:
      matrix:
        platform: 
        - amd64
        - aarch64
        # - armv7hf
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      if: matrix.platform != 'amd64'
      uses: docker/setup-qemu-action@v2

    - name: Login to GitHub docker registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Pull down ${{ matrix.platform }} base-devel image
      id: pull_image
      run: |
        if [ '${{ matrix.platform }}' =  'amd64' ] ; then 
          docker pull archlinux:base-devel
          docker tag archlinux:base-devel archlinux-amd64:base-devel
        else
          docker pull --platform=${{ matrix.platform }} ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:base-devel
          docker tag ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:base-devel archlinux-${{ matrix.platform }}:base-devel
        fi

    - name: Build `gha-makepkg` image
      uses: docker/build-push-action@v4
      with:
        context: ./.github/actions/makepkg
        file: ./.github/actions/makepkg/Dockerfile
        build-args: |
          ARCH_SUFFIX='-${{ matrix.platform }}'
        platforms: ${{ matrix.platform }}
        tags: ghcr.io/valorekhov/archlinux-${{ matrix.platform }}:latest
        pull: false
        # cache-from: type=gha
        cache-to: type=gha,mode=max
        push: true